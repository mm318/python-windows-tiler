# Python Windows Tiler

PWT is the fruit of my frustration towards the traditional windowing system.
There are a few tiling programs for Windows but none of them fit my needs.

## Build

In main directory, run "python setup.py build".
The built program should show up under the ./build/ directory.

## Configure

The configuration is built into ./pwt/config.py.
It currently has 3 sections, global, hotkey and window.

### Global

Global settings. Currently by default:

  * center_cursor = 'yes'
  * left_margin = '0'
  * right_margin = '0'
  * top_margin = '0'
  * bottom_margin = '0'

### Hotkey

The hotkey value expects the form of <modifier1 + modifier2 + ...> + <key>.
Currently by defaul set to:

  * move_window_right = 'alt+shift+l'
  * move_window_left = 'alt+shift+j'
  * move_window_up = 'alt+shift+i'
  * move_window_down = 'alt+shift+k'
  * focus_right = 'alt+l'
  * focus_left = 'alt+j'
  * focus_up = 'alt+i'
  * focus_down = 'alt+k'
  * increase_column_left = 'ctrl+alt+j'
  * increase_column_right = 'ctrl+alt+l'
  * close_focused_window = 'alt+shift+q'
  * switch_to_group_1 = 'alt+1'
  * switch_to_group_2 = 'alt+2'
  * switch_to_group_3 = 'alt+3'
  * switch_to_group_4 = 'alt+4'
  * switch_to_group_5 = 'alt+5'
  * switch_to_group_6 = 'alt+6'
  * switch_to_group_7 = 'alt+7'
  * switch_to_group_8 = 'alt+8'
  * switch_to_group_9 = 'alt+9'
  * send_to_group_1 = 'alt+shift+1'
  * send_to_group_2 = 'alt+shift+2'
  * send_to_group_3 = 'alt+shift+3'
  * send_to_group_4 = 'alt+shift+4'
  * send_to_group_5 = 'alt+shift+5'
  * send_to_group_6 = 'alt+shift+6'
  * send_to_group_7 = 'alt+shift+7'
  * send_to_group_8 = 'alt+shift+8'
  * send_to_group_9 = 'alt+shift+9'
  * move_to_previous_monitor = 'alt+shift+u'
  * move_to_next_monitor = 'alt+shift+o'
  * focus_previous_monitor = 'alt+u'
  * focus_next_monitor = 'alt+o'
  * toggle_stacked_column = 'alt+s'
  * toggle_tiled_floating = 'alt+shift+space'
  * toggle_window_decoration = 'alt+shift+d'
  * toggle_taskbar_visibility = 'alt+t'
  * print_focused_window_classname = 'alt+p' (for debugging purposes)
  * stop_pythonwindowstiler = 'alt+shift+delete'

### Window 

Window holds the window rules, currently there are 2 rules defined: must float and must decorate.
Due to the nature of some apps they struggle with being tiled.
Forcing the decorations on can help get rid of some of the glitches, if that doesn't help you can force float them.
If a window gets tiled that shouldn't get tiled you should also add it to float.

